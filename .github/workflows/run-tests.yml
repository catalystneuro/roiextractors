name: Full Tests
on:
  workflow_dispatch:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  run:
    name: Full tests on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13] # macos-13 is the latest version of macOS with Intel chip
    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow --tags
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Global Setup
        run: |
          pip install -U pip
          git config --global user.email "CI@example.com"
          git config --global user.name "CI Almighty"

      - name: Install roiextractors with minimal requirements
        run: pip install .
      - name: Test initial import of all non-lazy dependencies
        run: python -c "import roiextractors"

      - name: Install roiextractors with testing requirements
        run: pip install .[test]
      - name: Run minimal tests
        run: pytest tests/test_minimal -n auto --dist loadscope

      - name: Test full installation
        run: pip install .[full]

      - name: Get ophys_testing_data current head hash
        id: ophys
        run: echo "::set-output name=HASH_OPHYS_DATASET::$(git ls-remote https://gin.g-node.org/CatalystNeuro/ophys_testing_data.git HEAD | cut -f1)"
      - name: Cache ophys dataset - ${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}
        uses: actions/cache@v2
        id: cache-ophys-datasets
        with:
          path: ./ophys_testing_data
          key: ophys-datasets-042023-${{ matrix.os }}-${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}

      - name: Run full pytest with coverage
        run: pytest -n auto --dist loadscope --cov=./ --cov-report xml:./codecov.xml --ignore=old_tests
      - if: ${{ matrix.python-version == '3.9' && matrix.os == 'ubuntu-latest'}}
        name: Upload full coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./codecov.xml
          flags: unittests
          name: codecov-umbrella
          codecov_yml_path: ./codecov.yml
          verbose: true
